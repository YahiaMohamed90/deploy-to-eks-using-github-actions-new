name: Node js app deploy to EKS
on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: 
      - self-hosted
    steps:
    
    - uses: skolobov/gh-action-slack@v1
      with:
          status: starting
          channel: '#devops'
      if: always()
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Configure AWS Credentials
      id: aws
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1  
        
    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0' # default is latest stable
      id: install   

    - name: Setup EKS Kubectl
      uses: zachguo/setup-eks-kubectl@v1
      with:
       cluster: test-pipeline
       region: us-east-1
       namespace: default
             
    - name: Login to ECR
      id: ecr
      uses: jwalton/gh-ecr-login@v2.0.4
      with:
       access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
       secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       region: us-east-1
    - name: Push to ECR 
      id: push
      run: |
        docker build -t test-pipeline:${{ github.run_number }} .
        docker tag test-pipeline:${{ github.run_number }} 2248413462450000.dkr.ecr.us-east-1.amazonaws.com/test-pipeline:${{ github.run_number }}
        docker push 224841346245.dkr.ecr.us-east-1.amazonaws.com/test-pipeline:${{ github.run_number }} 

    - name: Update kube config
      id: k8sconfig
      run: aws eks update-kubeconfig --name test-pipeline
      
    - name: Update deployment file
      id: update-deployment
      env:
        ECR_REPO_URL: 224841346245.dkr.ecr.us-east-1.amazonaws.com/test-pipeline
        RUNNER_NUMBER: ${{ github.run_number }}
      run: |
        sed -i "s|image:.*|image: $ECR_REPO_URL:$RUNNER_NUMBER|g"  deployment.yaml
        cat deployment.yaml 
    
    - name: Deploy to EKS
      id: deploy
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
        
      
    - uses: skolobov/gh-action-slack@v1
      with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#devops'
      if: always()    
