name: Node js app deploy to GKE
on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env: 
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        PROJECT_ID: ${{ secrets.GKE_PROJECT }}
        GKE_CLUSTER: maqare-production    # Add your cluster name here.
        GKE_ZONE: us-central1-c   # Add your cluster zone here.
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      id: pull_the_code
      
    - name: Setup gcloud CLI
      uses: google-github-actions/setup-gcloud@1bee7de035d65ec5da40a31f8589e240eba8fde5
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
            gcloud --quiet auth configure-docker

    - name: Get the GKE credentials so we can deploy to the cluster
      uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}
  
       
    - name: Push to ECR
      id: build_image_and_push_to_ecr 
      run: |
        docker build -t test-image:${{ github.run_number }} .
        docker tag test-image  us-central1-docker.pkg.dev/halameet/maqare/test-image:${{ github.run_number }}
        docker push us-central1-docker.pkg.dev/halameet/maqare/test-image:${{ github.run_number }}
        
      
    - name: Update deployment file
      id: update_Deployment_file_with_latest_tag_of_the_image 
      env:
        ECR_REPO_URL: us-central1-docker.pkg.dev/halameet/maqare/test-image
        RUNNER_NUMBER: ${{ github.run_number }}
      run: |
        sed -i "s|image:.*|image: $ECR_REPO_URL:$RUNNER_NUMBER|g"  deployment.yaml
        cat deployment.yaml 
    
    - name: Deploy to EKS
      id: deploy_an_image_on_eks_Cluster
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
          
    - uses: act10ns/slack@v1
      with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: '#devops'
      if: always()
