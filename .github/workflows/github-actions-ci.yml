name: Node js app deploy to EKS
on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    env: 
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        CLUSTER : maqare
        REGION : me-central-1
        CHANEL : '#devops'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: $REGION   
        
    - name: Install kubectl
      uses: azure/setup-kubectl@v2.0
      with:
        version: 'v1.24.0' # default is latest stable
     # id: install kubectl  

    - name: Setup EKS Kubectl
      uses: zachguo/setup-eks-kubectl@v1
      with:
       cluster: $CLUSTER
       region: $REGION
       namespace: default
             
    - name: Login to ECR
      id: login to ecr
      uses: jwalton/gh-ecr-login@v2.0.4
      with:
       access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
       secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
       region: me-central-1
       
    - name: Push to ECR
      id: build image and push to ecr 
      run: |
        docker build -t test:${{ github.run_number }} .
        docker tag test:${{ github.run_number }} 224841346245.dkr.ecr.me-central-1.amazonaws.com/test:${{ github.run_number }}
        docker push 224841346245.dkr.ecr.me-central-1.amazonaws.com/test:${{ github.run_number }}
        
    - name: Update kube config
      id: Login to EKS Cluster
      run: aws eks update-kubeconfig --name $CLUSTER
      
    - name: Update deployment file
      id: update Deployment file with latest tag of the image 
      env:
        ECR_REPO_URL: 224841346245.dkr.ecr.me-central-1.amazonaws.com/test
        RUNNER_NUMBER: ${{ github.run_number }}
      run: |
        sed -i "s|image:.*|image: $ECR_REPO_URL:$RUNNER_NUMBER|g"  deployment.yaml
        cat deployment.yaml 
    
    - name: Deploy to EKS
      id: deploy an image on eks Cluster
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
          
    - uses: act10ns/slack@v1
      with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
          channel: $CHANEL
      if: always()
